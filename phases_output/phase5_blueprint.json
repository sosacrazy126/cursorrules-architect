{
  "metadata": {
    "phase": "phase5",
    "generated_at": "2025-07-19T06:51:46.553264",
    "version": "1.0",
    "generator": "BlueprintGenerator",
    "mode": "plan_mode"
  },
  "context": {
    "project_info": {
      "name": "cursorrules-architect",
      "type": "python_project",
      "framework": "asyncio"
    },
    "environment": {
      "python_version": "3.8+",
      "requirements": [
        "anthropic",
        "openai",
        "rich",
        "pydantic"
      ]
    },
    "dependencies": {
      "runtime": [
        "asyncio",
        "json",
        "pathlib"
      ],
      "dev": [
        "pytest",
        "black",
        "mypy"
      ]
    },
    "existing_analysis": {}
  },
  "tasks": [
    {
      "id": "T5.1",
      "name": "Report Consolidation",
      "description": "Consolidate all phase reports into final deliverable",
      "priority": "high",
      "dependencies": [
        "phase4"
      ],
      "expected_output": "Comprehensive final report"
    },
    {
      "id": "T5.2",
      "name": "Documentation Generation",
      "description": "Generate project documentation and guidelines",
      "priority": "medium",
      "dependencies": [
        "T5.1"
      ],
      "expected_output": "Complete documentation package"
    }
  ],
  "agents": [
    {
      "id": "A5.1",
      "name": "Consolidation Agent",
      "role": "Report consolidator and finalizer",
      "capabilities": [
        "Report generation",
        "Documentation creation",
        "Quality assurance"
      ],
      "assigned_tasks": [
        "T5.1",
        "T5.2"
      ]
    }
  ],
  "evaluation_criteria": {
    "task_criteria": [
      {
        "criterion": "Completeness",
        "description": "All required outputs are generated",
        "weight": 0.3,
        "measurement": "Percentage of completed deliverables"
      },
      {
        "criterion": "Quality",
        "description": "Outputs meet quality standards",
        "weight": 0.3,
        "measurement": "Quality score based on defined metrics"
      },
      {
        "criterion": "Timeliness",
        "description": "Tasks completed within allocated time",
        "weight": 0.2,
        "measurement": "Time taken vs. estimated time"
      },
      {
        "criterion": "Accuracy",
        "description": "Information is correct and verified",
        "weight": 0.2,
        "measurement": "Error rate and validation results"
      }
    ],
    "phase_criteria": [
      {
        "criterion": "Goal Achievement",
        "description": "Phase objectives are met",
        "measurement": "Objective completion percentage"
      },
      {
        "criterion": "Integration Success",
        "description": "Outputs integrate well with other phases",
        "measurement": "Integration test results"
      }
    ]
  },
  "execution_plan": {
    "sequence": [
      "T5.1",
      "T5.2"
    ],
    "parallelization": {
      "parallel_groups": [],
      "sequential": [
        "T5.1",
        "T5.2"
      ]
    },
    "checkpoints": [
      {
        "id": "CP_phase5_1",
        "after_task": "T5.1",
        "validation": "Initial task completion check",
        "action_on_failure": "retry_with_adjusted_parameters"
      },
      {
        "id": "CP_phase5_final",
        "after_task": "phase_completion",
        "validation": "Full phase validation",
        "action_on_failure": "escalate_to_supervisor"
      }
    ],
    "rollback_strategy": {
      "trigger_conditions": [
        "critical_failure",
        "validation_failure"
      ],
      "rollback_points": [
        {
          "id": "CP_phase5_1",
          "after_task": "T5.1",
          "validation": "Initial task completion check",
          "action_on_failure": "retry_with_adjusted_parameters"
        },
        {
          "id": "CP_phase5_final",
          "after_task": "phase_completion",
          "validation": "Full phase validation",
          "action_on_failure": "escalate_to_supervisor"
        }
      ],
      "recovery_actions": [
        "restore_previous_state",
        "adjust_parameters",
        "retry_with_fallback"
      ]
    }
  },
  "constraints": {
    "time_limit": "2 hours",
    "resource_limits": {
      "max_agents": 5,
      "max_parallel_tasks": 3,
      "memory_limit": "4GB"
    },
    "quality_thresholds": {
      "min_accuracy": 0.85,
      "min_completeness": 0.9
    },
    "priority_focus": "efficiency"
  }
}